// Code generated by github.com/atombender/go-jsonschema, DO NOT EDIT.

package traderepublic

import "encoding/json"
import "fmt"
import "regexp"
import "time"

type Icon string

// UnmarshalJSON implements json.Unmarshaler.
func (j *Icon) UnmarshalJSON(value []byte) error {
	type Plain Icon
	var plain Plain
	if err := json.Unmarshal(value, &plain); err != nil {
		return err
	}
	if matched, _ := regexp.MatchString(`^logos/([A-Z0-9]+|timeline_interest_new|merchant-[a-f0-9-]+|XF[0-9A-Z]+|contacts-[A-Z]-[A-Za-z]+|bank_[a-z0-9_]+)/v2$`, string(plain)); !matched {
		return fmt.Errorf("field %s pattern match: must match %s", "", `^logos/([A-Z0-9]+|timeline_interest_new|merchant-[a-f0-9-]+|XF[0-9A-Z]+|contacts-[A-Z]-[A-Za-z]+|bank_[a-z0-9_]+)/v2$`)
	}
	*j = Icon(plain)
	return nil
}

type Money string

// UnmarshalJSON implements json.Unmarshaler.
func (j *Money) UnmarshalJSON(value []byte) error {
	type Plain Money
	var plain Plain
	if err := json.Unmarshal(value, &plain); err != nil {
		return err
	}
	if matched, _ := regexp.MatchString(`^[+-]?[0-9]+,[0-9]{2} [€$]$`, string(plain)); !matched {
		return fmt.Errorf("field %s pattern match: must match %s", "", `^[+-]?[0-9]+,[0-9]{2} [€$]$`)
	}
	*j = Money(plain)
	return nil
}

type Percentage string

// UnmarshalJSON implements json.Unmarshaler.
func (j *Percentage) UnmarshalJSON(value []byte) error {
	type Plain Percentage
	var plain Plain
	if err := json.Unmarshal(value, &plain); err != nil {
		return err
	}
	if matched, _ := regexp.MatchString(`^[0-9]+,[0-9]{2} %$`, string(plain)); !matched {
		return fmt.Errorf("field %s pattern match: must match %s", "", `^[0-9]+,[0-9]{2} %$`)
	}
	*j = Percentage(plain)
	return nil
}

type Timestamp time.Time

type Uuid string

// UnmarshalJSON implements json.Unmarshaler.
func (j *Uuid) UnmarshalJSON(value []byte) error {
	type Plain Uuid
	var plain Plain
	if err := json.Unmarshal(value, &plain); err != nil {
		return err
	}
	if matched, _ := regexp.MatchString(`^[0-9a-f]{8}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{12}$`, string(plain)); !matched {
		return fmt.Errorf("field %s pattern match: must match %s", "", `^[0-9a-f]{8}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{12}$`)
	}
	*j = Uuid(plain)
	return nil
}
