// Code generated by MockGen. DO NOT EDIT.
// Source: credentials_interface.go
//
// Generated by this command:
//
//	mockgen -source=credentials_interface.go -destination credentials_mock_gen.go -package=auth
//

// Package auth is a generated GoMock package.
package auth

import (
	reflect "reflect"

	gomock "go.uber.org/mock/gomock"
)

// MockCredentialsServiceInterface is a mock of CredentialsServiceInterface interface.
type MockCredentialsServiceInterface struct {
	ctrl     *gomock.Controller
	recorder *MockCredentialsServiceInterfaceMockRecorder
	isgomock struct{}
}

// MockCredentialsServiceInterfaceMockRecorder is the mock recorder for MockCredentialsServiceInterface.
type MockCredentialsServiceInterfaceMockRecorder struct {
	mock *MockCredentialsServiceInterface
}

// NewMockCredentialsServiceInterface creates a new mock instance.
func NewMockCredentialsServiceInterface(ctrl *gomock.Controller) *MockCredentialsServiceInterface {
	mock := &MockCredentialsServiceInterface{ctrl: ctrl}
	mock.recorder = &MockCredentialsServiceInterfaceMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockCredentialsServiceInterface) EXPECT() *MockCredentialsServiceInterfaceMockRecorder {
	return m.recorder
}

// GetToken mocks base method.
func (m *MockCredentialsServiceInterface) GetToken() Token {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetToken")
	ret0, _ := ret[0].(Token)
	return ret0
}

// GetToken indicates an expected call of GetToken.
func (mr *MockCredentialsServiceInterfaceMockRecorder) GetToken() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetToken", reflect.TypeOf((*MockCredentialsServiceInterface)(nil).GetToken))
}

// Load mocks base method.
func (m *MockCredentialsServiceInterface) Load() error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Load")
	ret0, _ := ret[0].(error)
	return ret0
}

// Load indicates an expected call of Load.
func (mr *MockCredentialsServiceInterfaceMockRecorder) Load() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Load", reflect.TypeOf((*MockCredentialsServiceInterface)(nil).Load))
}

// Store mocks base method.
func (m *MockCredentialsServiceInterface) Store(token Token) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Store", token)
	ret0, _ := ret[0].(error)
	return ret0
}

// Store indicates an expected call of Store.
func (mr *MockCredentialsServiceInterfaceMockRecorder) Store(token any) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Store", reflect.TypeOf((*MockCredentialsServiceInterface)(nil).Store), token)
}
